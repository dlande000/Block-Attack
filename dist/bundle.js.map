{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/entry.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA,0BAA0B,SAAS;AACnC,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,cAAc,WAAW;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA,qB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,0BAA0B,WAAW;AACrC,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,+CAA+C,OAAO;AACtD;;AAEA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA,iCAAiC;AACjC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA,iCAAiC;AACjC;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/entry.js\");\n","document.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n    ctx.scale(60, 60);\n\n    let gameOver = false;\n    let startScreen = true;\n    let isPlaying = false;\n\n    const myAudio = document.getElementById(\"music\");\n    const mySoundEffect = document.getElementById(\"sound-effect\");\n\n    function playMusic() {\n        if (!isPlaying) {\n            myAudio.pause();\n            myAudio.currentTime = 0;\n        } else {\n            myAudio.play();\n        }\n    }\n\n    function playSoundEffect() {\n        if (isPlaying) {\n            mySoundEffect.play();\n            setTimeout(function() {\n                mySoundEffect.pause();\n                mySoundEffect.currentTime = 0;\n            }, 450);\n        }\n    }\n\n    function randomBlock() {\n        const blocks = \"RYGBDP\";\n        return blocks[Math.floor(Math.random() * 6)];\n    }\n\n    function createBoard() {\n        const board = [];\n        for (let height = 0; height < 13; height++) {\n            board.push(new Array(6).fill(0));\n        }\n        for (let row = 12; row > 6; row--) {\n            for (let col = 0; col < 6; col++) {\n                if (col !== 3) {\n                    board[row][col] = randomBlock();\n                }\n            }\n        }\n        for (let x = 10; x < 13; x++) {\n            board[x][3] = randomBlock();\n        }\n        checkStartingClusters(board);\n        return board;\n    }\n\n    let board = createBoard();\n\n    let cursor = {\n        pos: {x: 2, y: 7},\n        score: 0\n    };\n\n    function checkStartingClusters(grid) {\n        let checking = true;\n        while (checking) {\n            checking = false;\n            if (grid.length !== 13) {\n                for (let i = 0; i < 6; i++) {\n                    if ((i < 4 && grid[i] === grid[i + 1] && grid[i] === grid[i + 2]) || (grid[i] === board[12][i])) {\n                        checking = true;\n                        grid[i] = randomBlock();\n                    } \n                }\n            } else {\n                grid.forEach((width, y) => {\n                    width.forEach((value, x) => {\n                        if (value !== 0) {\n                            if ((x < 4 && value === grid[y][x + 1] && value === grid[y][x + 2]) || (y < 10 && value === grid[y + 1][x] && value === grid[y + 2][x])) {\n                                grid[y][x] = randomBlock();\n                                checking = true;\n                        }\n                    }\n                });\n            });\n        }}\n    }\n\n    function createNextRow() {\n        let nextRow = [];\n        for (let i = 0; i < 6; i++) {\n            nextRow.push(randomBlock());\n        }\n        checkStartingClusters(nextRow);\n        return nextRow;\n    }\n\n    function swap(board, cursor) {\n        let a = board[cursor.pos.y][cursor.pos.x];\n        let b = board[cursor.pos.y][cursor.pos.x + 1];\n        [a, b] = [b, a];\n        board[cursor.pos.y][cursor.pos.x] = a;\n        board[cursor.pos.y][cursor.pos.x + 1] = b;\n        checkAndDeleteClusters(board);\n    }\n\n    function addRowToBoard(row, board) {\n        board.shift();\n        board.push(row);\n        checkGameOver(board[0]);\n        checkAndDeleteClusters(board);\n    }\n\n    function checkGameOver(row) {\n        for (let i = 0; i < 6; i++) {\n            if (row[i] !== 0) {\n                gameOver = true;\n            }\n        }\n    }\n\n    function updateScore() {\n        document.getElementById('score').innerText = cursor.score;\n    }\n\n    const BLOCKS = {\n        \"R\": document.getElementById(\"red-block\"),\n        \"Y\": document.getElementById(\"yellow-block\"),\n        \"G\": document.getElementById(\"green-block\"),\n        \"B\": document.getElementById(\"blue-block\"),\n        \"D\": document.getElementById(\"dark-blue-block\"),\n        \"P\": document.getElementById(\"purple-block\")\n    };\n\n    function drawBlock(block, y, x) {\n        if (y !== 12) {\n            ctx.drawImage(BLOCKS[block], 0.5, 0.5, 15, 15, x, y - yIncrease, 1, 1);\n        } else {\n            ctx.drawImage(BLOCKS[block], 15.5, 0.5, 15, 15, x, y - yIncrease, 1, 1);\n        }\n    }\n\n    function drawCursor(x, y) {\n        cursorImg = document.getElementById(\"cursor\");\n        let yIncreaseCursor = yIncrease;\n        if (y === 0) {\n            yIncreaseCursor = 0;\n        }\n        ctx.drawImage(cursorImg, 1, 1, 36, 20, x, y - yIncreaseCursor, 2, 1);\n    }\n\n    function drawBoard(board) {\n        board.forEach((row, y) => {\n            row.forEach((block, x) => {\n            if (block !== 0) {\n                drawBlock(block, y, x);\n            }});\n        });\n        drawCursor(cursor.pos.x, cursor.pos.y);\n    }\n\n    function moveCursor(x, y) {\n        let dy = cursor.pos.y + y;\n        let dx = cursor.pos.x + x;\n        if (dx <= 4 && dx >= 0) {\n            cursor.pos.x = dx;\n        }\n        if (dy < 12 && dy >= 0) {\n            cursor.pos.y = dy;\n        }\n    }\n\n    function checkAndDeleteNexusClustersLeftAndDown(position) {\n        let y = position[0];\n        let x = position[1];\n        if (y < 10 && board[y][x] === board[y + 1][x] && board[y + 2][x]) {\n            board[y + 1][x] = 0;\n            board[y + 2][x] = 0;\n            cursor.score += 200;\n        }\n    }\n\n    function checkAndDeleteNexusClusters(position, increment) {\n        let oneLeft;\n        let twoLeft;\n        let oneRight;\n        let twoRight;\n        for (let i = 0; i < increment; i++) {\n            let y = position[0] + i;\n            let x = position[1];\n            let pivot = board[y][x];\n            if (x >= 2) {\n                oneLeft = board[y][x - 1];\n                twoLeft = board[y][x - 2];\n                if (x <= 3) {\n                    oneRight = board[y][x + 1];\n                    twoRight = board[y][x + 2];\n                    if (pivot === oneLeft && pivot === twoLeft && pivot === oneRight && pivot === twoRight) {\n                        board[y][x - 1] = 0;\n                        board[y][x - 2] = 0;\n                        board[y][x + 1] = 0;\n                        board[y][x + 2] = 0;\n                        cursor.score += 700;\n                    }\n                } if (x <= 4) {\n                    oneRight = board[y][x + 1];\n                    if (pivot === oneLeft && pivot === twoLeft && pivot === oneRight) {\n                        board[y][x - 1] = 0;\n                        board[y][x - 2] = 0;\n                        board[y][x + 1] = 0;\n                        cursor.score += 500;\n                    }\n                } if (pivot === oneLeft && pivot === twoLeft) {\n                    board[y][x - 1] = 0;\n                    board[y][x - 2] = 0;\n                    cursor.score += 200;\n                }\n            } if (x <= 3) {\n                oneRight = board[y][x + 1];\n                twoRight = board[y][x + 2];\n                if (x >= 1) {\n                    oneLeft = board[y][x - 1];\n                    if (pivot === oneRight && pivot === twoRight && pivot === oneLeft) {\n                        board[y][x + 1] = 0;\n                        board[y][x + 1] = 0;\n                        board[y][x + 2] = 0;\n                        cursor.score += 500;\n                    }\n                } if (pivot === oneRight && pivot === twoRight) {\n                    board[y][x + 1] = 0;\n                    board[y][x + 2] = 0;\n                    cursor.score += 200;\n                }\n            } if (x >= 1 && x <= 4 && increment === 3) {\n                oneRight = board[y][x + 1];\n                oneLeft = board[y][x - 1];\n                if (pivot === oneRight && pivot === oneLeft) {\n                    board[y][x + 1] = 0;\n                    board[y][x - 1] = 0;\n                    cursor.score += 200;\n                }\n            }\n        }\n    }\n\n    function checkStartingPointHorizontal(row, col) {\n        if (board[row][col] === board[row][col - 1] && board[row - 1][col] !== board[row][col]) {\n            let col2 = col - 1;\n            return checkStartingPointHorizontal(row, col2);\n        } else {\n            return [row, col];\n        }\n\n    }\n\n    function checkStartingPointVertical(row, col) {\n        if ((board[row][col] === board[row - 1][col] && board[row][col] === board[row + 1][col]) || (board[row][col] === board[row - 1][col] && board[row][col] === board[row - 2][col]))  {\n            let row2 = row - 1;\n            return checkStartingPointVertical(row2, col);\n        } else {\n            return [row, col];\n        }\n    }\n\n    function checkAndDeleteClusters(board) {\n        for (let rowY = 0; rowY < 12; rowY++) {\n            for (let colX = 0; colX < 6; colX++) {\n                if (board[rowY][colX] !== 0 && board[rowY + 1][colX] !== 0 && !gameOver) {\n                    let col = checkStartingPointHorizontal(rowY, colX)[1];\n                    let row = checkStartingPointVertical(rowY, col)[0];\n                    let pivot = board[row][col];\n                    let oneBelow;\n                    let twoBelow;\n                    let threeBelow;\n                    let fourBelow;\n                    let oneRight;\n                    let twoRight;\n                    let threeRight;\n                    let fourRight;\n                        if (row < 8) {\n                            oneBelow = board[row + 1][col];\n                            twoBelow = board[row + 2][col];\n                            threeBelow = board[row + 3][col];\n                            fourBelow = board[row + 4][col];\n                            if (pivot === oneBelow && pivot === twoBelow && pivot === threeBelow && pivot === fourBelow) {\n                                checkAndDeleteNexusClusters([row + 2, col], 1);\n                                for (let i = 0; i < 5; i++) {\n                                    board[row + i][col] = 0;\n                                } cursor.score += 700;\n                                playSoundEffect();\n                            }\n                        }\n                        if (row < 9) {\n                            oneBelow = board[row + 1][col];\n                            twoBelow = board[row + 2][col];\n                            threeBelow = board[row + 3][col];\n                            if (pivot === oneBelow && pivot === twoBelow && pivot === threeBelow) {\n                                checkAndDeleteNexusClusters([row + 1, col], 2);\n                                for (let i = 0; i < 4; i++) {\n                                    board[row + i][col] = 0;\n                                } cursor.score += 300;\n                                playSoundEffect();\n                            }\n                        }\n                        if (row < 10) {\n                            oneBelow = board[row + 1][col];\n                            twoBelow = board[row + 2][col];\n                            \n                            if (pivot === oneBelow && pivot === twoBelow) {\n                                \n                                checkAndDeleteNexusClusters([row, col], 3);\n                                for (let i = 0; i < 3; i++) {\n                                    board[row + i][col] = 0;\n                                    \n                                } cursor.score += 100;\n                                playSoundEffect();\n                            }\n                        }\n                        if (col < 2) {\n                            oneRight = board[row][col + 1];\n                            twoRight = board[row][col + 2];\n                            threeRight = board[row][col + 3];\n                            fourRight = board[row][col + 4];\n                            if (pivot === oneRight && pivot === twoRight && pivot === threeRight && pivot === fourRight && board[row + 1][col + 1] !== 0 && board[row + 1][col + 2] !== 0 && board[row + 1][col + 3] !== 0 && board[row + 1][col + 4] !== 0) {\n                                for (let i = 0; i < 5; i++) {\n                                    board[row][col + i] = 0;\n                                } cursor.score += 700;\n                                playSoundEffect();\n                            }} if (col < 3) {\n                            oneRight = board[row][col + 1];\n                            twoRight = board[row][col + 2];\n                            threeRight = board[row][col + 3];\n                            if (pivot === oneRight && pivot === twoRight && pivot === threeRight && board[row + 1][col + 1] !== 0 && board[row + 1][col + 2] !== 0 && board[row + 1][col + 3] !== 0) {\n                                for (let i = 0; i < 4; i++) {\n                                    board[row][col + i] = 0;\n                                } cursor.score += 300;\n                                playSoundEffect();\n                            }\n                            } if (col < 4) {\n                            oneRight = board[row][col + 1];\n                            twoRight = board[row][col + 2];\n                            if (pivot === oneRight && pivot === twoRight && board[row + 1][col + 1] !== 0 && board[row + 1][col + 2] !== 0) {\n                                checkAndDeleteNexusClustersLeftAndDown([row, col + 2]);\n                                for (let i = 0; i < 3; i++) {\n                                    board[row][col + i] = 0;\n                                } cursor.score += 100;\n                                playSoundEffect();\n                            }\n                        }\n                    }\n                }\n        }\n    }\n\n    function fall(board) {\n        board.forEach((row, y) => {\n            row.forEach((val, x) => {\n                if (y < 11 && board[y + 1][x] === 0 && val !== 0) {\n                    board[y + 1][x] = val;\n                    board[y][x] = 0;\n                }\n            });\n        });\n        checkAndDeleteClusters(board);\n    }\n\n    document.addEventListener('keydown', event => {\n        if (event.keyCode === 37) {\n            moveCursor(-1, 0);\n        } else if (event.keyCode === 38) {\n            event.preventDefault();\n            moveCursor(0, -1);\n        } else if (event.keyCode === 39) {\n            moveCursor(1, 0);\n        } else if (event.keyCode === 40) {\n            event.preventDefault();\n            moveCursor(0, 1);\n        } else if (event.keyCode === 32) {\n            if (startScreen || gameOver) {\n                startScreen = false;\n                gameOver = false;\n                cursor.score = 0;\n                board = createBoard();\n                yIncrease = 0;\n                isPlaying = true;\n                playMusic();\n            } else {\n                swap(board, cursor);\n            }\n        } else if (event.keyCode === 90) {\n            addRowToBoard(createNextRow(), board);\n        } else if (event.keyCode === 83) {\n            isPlaying = !isPlaying;\n            playMusic();\n        }\n    });\n\n    let increaseInterval = 5000;\n    let yIncrease = 0;\n\n    function increaseY() {\n        yIncrease += (1/50);\n        if (yIncrease >= 1) {\n            addRowToBoard(createNextRow(), board);\n            if (cursor.pos.y !== 0) {\n                cursor.pos.y--;\n            }\n            yIncrease = 0;\n        }\n    }\n\n    setInterval(increaseY, (increaseInterval/50));\n\n    function update() {\n        if (startScreen) {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = \"#2c1960\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.font = \".5px 'Press Start 2P'\";\n            ctx.fillStyle = \"white\";\n            ctx.fillText(\"Swap blocks\", 0.3, 1);\n            ctx.fillText(\"to clear\", 0.3, 2);\n            ctx.fillText(\"the board.\", 0.3, 3);\n            ctx.fillText(\"Don't let\", 0.3, 5);\n            ctx.fillText(\"the blocks\", 0.3, 6);\n            ctx.fillText(\"reach the\", 0.3, 7);\n            ctx.fillText(\"top.\", 0.3, 8);\n            ctx.fillText(\"Press space\", 0.3, 10);\n            ctx.fillText(\"to begin!\", 0.3, 11);\n        } else if (!gameOver) {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            fall(board);\n            drawBoard(board);\n            updateScore();\n            checkGameOver(board[0]);\n        } else if (gameOver) {\n            isPlaying = false;\n            playMusic();\n            myAudio.currentTime = 0;\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = \"#2c1960\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.font = \".5px 'Press Start 2P'\";\n            ctx.fillStyle = \"white\";\n            ctx.fillText(\"Great job!\", 0.3, 3);\n            ctx.fillText(\"Your score:\", 0.3, 5);\n            ctx.fillStyle = \"gold\";\n            ctx.textAlign = \"center\";\n            ctx.fillText(cursor.score, 3, 6);\n            ctx.fillStyle = \"white\";\n            ctx.textAlign = \"left\";\n            ctx.fillText(\"Press space\", 0.3, 8);\n            ctx.fillText(\"to play\", 0.3, 9);\n            ctx.fillText(\"again!\", 0.3, 10);\n        }\n        requestAnimationFrame(update);\n    }\n\n    window.board = board;\n\n    playMusic();\n    update();\n});"],"sourceRoot":""}