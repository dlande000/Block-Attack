{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/audio.js","webpack:///./src/block.js","webpack:///./src/board.js","webpack:///./src/cursor.js","webpack:///./src/entry.js","webpack:///./src/singleton.js","webpack:///./src/solutions.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;AC3BpB;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;ACXpB;AAAA;AAAA;AAAA;AAA4B;AACO;AAGK;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,aAAa;AACzC,wCAAwC,kDAAQ;AAChD;AACA,0BAA0B,SAAS;AACnC,6BAA6B,SAAS;AACtC;AACA,yCAAyC,8CAAK;AAC9C;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC,6BAA6B,8CAAK;AAClC;AACA,eAAe,4EAAyB;AACxC;;AAEA;AACA;AACA,uBAAuB,OAAO;AAC9B,6BAA6B,8CAAK;AAClC;AACA,kBAAkB,2EAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAQ;AAC9C;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;ACxEpB;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,E;;;;;;;;;;;;ACnBrB;AAAA;AAAA;AAAA;AAA4B;AACE;AACF;;AAE5B;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,+CAAM;AAC3B,oBAAoB,8CAAK;AACzB,oBAAoB,8CAAK;;AAEzB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6BAA6B,+CAAM;AACnC,4BAA4B,8CAAK;AACjC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,E;;;;;;;;;;;;AC5JD;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACe,uEAAQ,E;;;;;;;;;;;;ACZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACO;;AAE5B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,8CAAK;AAC/C;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,8BAA8B,8CAAK;AACnC,a;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,mBAAmB,QAAQ;AAC3B,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD,sDAAsD,kDAAQ;AAC9D,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD,sDAAsD,kDAAQ;AAC9D,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2CAA2C,OAAO;AAClD,sDAAsD,kDAAQ;;AAE9D,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD,sDAAsD,kDAAQ;AAC9D,6BAA6B;AAC7B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD,sDAAsD,kDAAQ;AAC9D,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD,sDAAsD,kDAAQ;AAC9D,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,kDAAQ;AAClC,0BAA0B,kDAAQ;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAQ;AAC9C,sCAAsC,kDAAQ;AAC9C,sCAAsC,kDAAQ;AAC9C,sCAAsC,kDAAQ;AAC9C;AACA;AACA,aAAa;AACb;AACA;AACA,sCAAsC,kDAAQ;AAC9C,sCAAsC,kDAAQ;AAC9C,sCAAsC,kDAAQ;AAC9C;AACA;AACA,aAAa;AACb,kCAAkC,kDAAQ;AAC1C,kCAAkC,kDAAQ;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAQ;AAC9C,sCAAsC,kDAAQ;AAC9C,sCAAsC,kDAAQ;AAC9C;AACA;AACA,aAAa;AACb,kCAAkC,kDAAQ;AAC1C,kCAAkC,kDAAQ;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kCAAkC,kDAAQ;AAC1C,kCAAkC,kDAAQ;AAC1C;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/entry.js\");\n","class Audio {\n    constructor() {\n        this.music = document.getElementById(\"music\");\n        this.soundEffect = document.getElementById(\"sound-effect\");\n        this.musicPlaying = false;\n    }\n\n    playMusic() {\n        if (!this.musicPlaying) {\n            this.music.pause();\n            this.music.currentTime = 0;\n        } else {\n            this.music.play();\n        }\n    }\n\n    playSoundEffect() {\n        if (this.musicPlaying) {\n            this.soundEffect.play();\n            setTimeout(() => {\n                this.soundEffect.pause();\n                this.soundEffect.currentTime = 0;\n            }, 450);\n        }\n    }\n}\n\nexport default Audio;","class Block {\n    constructor() {\n        this.value = this.randomBlock();\n    }\n\n    randomBlock() {\n        const blocks = \"RYGBDP\";\n        return blocks[Math.floor(Math.random() * 6)];\n    }\n}\n\nexport default Block;","import Block from './block';\nimport instance from './singleton';\nimport { clearSolutionsBeforeStart,\n    clearSolutionsFromNewRow,\n    clearSolutions } from './solutions';\n\nclass Board {\n    constructor() {\n        this.grid = this.createGrid();\n        this.gameOver = false;\n    }\n\n    createGrid() {\n        let grid = [];\n        for (let height = 0; height < 13; height++) {\n            grid.push(new Array(6).fill(instance));\n        }\n        for (let row = 12; row > 6; row--) {\n            for (let col = 0; col < 6; col++) {\n                if (col !== 3) {\n                    grid[row][col] = new Block();\n                }\n            }\n        }\n        for (let x = 10; x < 13; x++) {\n            grid[x][3] = new Block();\n        }\n        return clearSolutionsBeforeStart(grid);\n    }\n\n    createNextRow() {\n        let nextRow = [];\n        for (let i = 0; i < 6; i++) {\n            nextRow.push(new Block());\n        }\n        nextRow = clearSolutionsFromNewRow(nextRow, this.grid);\n        this.grid.shift();\n        this.grid.push(nextRow);\n        this.checkGameOver();\n        // this.grid = clearSolutions(this.grid);\n    }\n\n    swap(y, x) {\n        let a = this.grid[y][x];\n        let b = this.grid[y][x + 1];\n        [a, b] = [b, a];\n        this.grid[y][x] = a;\n        this.grid[y][x + 1] = b;\n        // this.grid = clearSolutions(this.grid);\n    }\n\n    fall() {\n        this.grid.forEach((row, y) => {\n            row.forEach((block, x) => {\n                if (y < 11 && !this.grid[y + 1][x].value && block.value) {\n                    this.grid[y + 1][x] = block;\n                    this.grid[y][x] = instance;\n                }\n            });\n        });\n        // this.grid = clearSolutions(this.grid);\n    }\n\n    checkGameOver() {\n        for (let i = 0; i < 6; i++) {\n            if (this.grid[0][i].value) {\n                this.gameOver = true;\n            }\n        }\n    }\n}\n\nexport default Board;","class Cursor {\n    constructor() {\n        this.y = 7;\n        this.x = 2;\n        this.score = 0;\n    }\n\n    move(y, x) {\n        let dy = this.y + y;\n        let dx = this.x + x;\n        if (dx <= 4 && dx >= 0) {\n            this.x = dx;\n        }\n        if (dy < 12 && dy >= 0) {\n            this.y = dy;\n        }\n    }\n}\n\nexport default Cursor;","import Audio from './audio';\nimport Cursor from './cursor';\nimport Board from './board';\n\n// webpack --watch --mode=development\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n    ctx.scale(60, 60);\n\n    let cursor = new Cursor();\n    let board = new Board();\n    let audio = new Audio();\n\n    let startScreen = true;\n\n    const updateScore = () => document.getElementById('score').innerText = cursor.score;\n\n    const BLOCKS = {\n        \"R\": document.getElementById(\"red-block\"),\n        \"Y\": document.getElementById(\"yellow-block\"),\n        \"G\": document.getElementById(\"green-block\"),\n        \"B\": document.getElementById(\"blue-block\"),\n        \"D\": document.getElementById(\"dark-blue-block\"),\n        \"P\": document.getElementById(\"purple-block\")\n    };\n\n    const drawBlock = (color, y, x) => {\n        if (y !== 12) {\n            ctx.drawImage(BLOCKS[color], 0.5, 0.5, 15, 15, x, y - yIncrease, 1, 1);\n        } else {\n            ctx.drawImage(BLOCKS[color], 15.5, 0.5, 15, 15, x, y - yIncrease, 1, 1);\n        }\n    };\n\n    const drawCursor = (y, x) => {\n        const cursorImg = document.getElementById(\"cursor\");\n        let yIncreaseCursor = yIncrease;\n        if (y === 0) {\n            yIncreaseCursor = 0;\n        }\n        ctx.drawImage(cursorImg, 1, 1, 36, 20, x, y - yIncreaseCursor, 2, 1);\n    };\n\n    const drawBoard = board => {\n        board.forEach((row, y) => {\n            row.forEach((block, x) => {\n            if (block.value) {\n                drawBlock(block.value, y, x);\n            }});\n        });\n    };\n\n    const draw = () => {\n        drawBoard(board.grid);\n        drawCursor(cursor.y, cursor.x);\n    };\n\n    document.addEventListener('keydown', event => {\n        if (event.keyCode === 37) {\n            cursor.move(0, -1);\n        } else if (event.keyCode === 38) {\n            event.preventDefault();\n            cursor.move(-1, 0);\n        } else if (event.keyCode === 39) {\n            cursor.move(0, 1);\n        } else if (event.keyCode === 40) {\n            event.preventDefault();\n            cursor.move(1, 0);\n        } else if (event.keyCode === 32) {\n            if (startScreen || board.gameOver) {\n                startScreen = false;\n                board.gameOver = false;\n                cursor = new Cursor();\n                board = new Board();\n                yIncrease = 0;\n                audio.musicPlaying = true;\n                audio.playMusic();\n            } else {\n                board.swap(cursor.y, cursor.x);\n            }\n        } else if (event.keyCode === 90) {\n            board.createNextRow();\n        } else if (event.keyCode === 83) {\n            audio.musicPlaying = !audio.musicPlaying;\n            audio.playMusic();\n        }\n    });\n\n    let increaseInterval = 5000;\n    let yIncrease = 0;\n\n    const increaseY = () => {\n        yIncrease += (1/50);\n        if (yIncrease >= 1) {\n            board.createNextRow();\n            if (cursor.y !== 0) {\n                cursor.y--;\n            }\n            yIncrease = 0;\n        }\n    };\n\n    setInterval(increaseY, (increaseInterval/50));\n\n    const update = () => {\n        if (startScreen) {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = \"#2c1960\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.font = \".5px 'Press Start 2P'\";\n            ctx.fillStyle = \"white\";\n            ctx.fillText(\"Swap blocks\", 0.3, 1);\n            ctx.fillText(\"to clear\", 0.3, 2);\n            ctx.fillText(\"the board.\", 0.3, 3);\n            ctx.fillText(\"Don't let\", 0.3, 5);\n            ctx.fillText(\"the blocks\", 0.3, 6);\n            ctx.fillText(\"reach the\", 0.3, 7);\n            ctx.fillText(\"top.\", 0.3, 8);\n            ctx.fillText(\"Press space\", 0.3, 10);\n            ctx.fillText(\"to begin!\", 0.3, 11);\n        } else if (!board.gameOver) {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            board.fall();\n            draw();\n            updateScore();\n            board.checkGameOver();\n        } else if (board.gameOver) {\n            audio.musicPlaying = false;\n            audio.playMusic();\n            audio.music.currentTime = 0;\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = \"#2c1960\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.font = \".5px 'Press Start 2P'\";\n            ctx.fillStyle = \"white\";\n            ctx.fillText(\"Great job!\", 0.3, 3);\n            ctx.fillText(\"Your score:\", 0.3, 5);\n            ctx.fillStyle = \"gold\";\n            ctx.textAlign = \"center\";\n            ctx.fillText(cursor.score, 3, 6);\n            ctx.fillStyle = \"white\";\n            ctx.textAlign = \"left\";\n            ctx.fillText(\"Press space\", 0.3, 8);\n            ctx.fillText(\"to play\", 0.3, 9);\n            ctx.fillText(\"again!\", 0.3, 10);\n        }\n        requestAnimationFrame(update);\n    };\n    // what is this line??\n    window.board = board;\n\n    audio.playMusic();\n    update();\n});","class Singleton {\n    constructor() {\n        this.value = null;\n        if (!Singleton.instance) {\n            Singleton.instance = this;\n        }\n        return Singleton.instance;\n    }\n}\n\nconst instance = new Singleton();\nObject.freeze(instance);\nexport default instance;","import Block from './block';\nimport instance from './singleton';\n\nexport function clearSolutionsBeforeStart(grid) {\n    // Remove any randomly-generated solutions from the board before game start.\n    let _grid = grid;\n    let checking = true;\n    while (checking) {\n        checking = false;\n        _grid.forEach((row, y) => {\n            row.forEach((block, x) => {\n                if (block.value) {\n                    if ((x < 4 && block.value === _grid[y][x + 1].value && block.value === _grid[y][x + 2].value) || \n                        (y < 10 && block.value === _grid[y + 1][x].value && block.value === _grid[y + 2][x].value)) {\n                        _grid[y][x] = new Block();\n                        checking = true;\n                    }\n                }\n            });\n        });\n    }\n    return _grid;\n}\n\nexport function clearSolutionsFromNewRow(row, grid) {\n    // Remove any randomly-generated solutions from a new row before adding to grid.\n    let _row = row;\n    let checking = true;\n    while (checking) {\n        checking = false;\n        for (let i = 0; i < 6; i++) {\n            if ((i < 4 && _row[i].value === _row[i + 1].value && _row[i].value === _row[i + 2].value) || \n                (_row[i].value === grid[12][i].value)) {\n                checking = true;\n                _row[i] = new Block();\n            } \n        }\n    }\n    return _row;\n}\n\nexport function clearSolutions(grid) {\n    // Clear any solutions on grid after swap, fall, or new row, return new grid.\n    let _grid = grid;\n    for (let y = 0; y < 12; y++) {\n        for (let x = 0; x < 6; x++) {\n            if (_grid[y][x].value && _grid[y + 1][x].value) {\n                let col = checkStartingPointHorizontal(y, x)[1];\n                let row = checkStartingPointVertical(y, col)[0];\n                let pivot = _grid[row][col].value;\n                let oneBelow;\n                let twoBelow;\n                let threeBelow;\n                let fourBelow;\n                let oneRight;\n                let twoRight;\n                let threeRight;\n                let fourRight;\n                    if (row < 8) {\n                        oneBelow = _grid[row + 1][col].value;\n                        twoBelow = _grid[row + 2][col].value;\n                        threeBelow = _grid[row + 3][col].value;\n                        fourBelow = _grid[row + 4][col].value;\n                        if (pivot === oneBelow && pivot === twoBelow && pivot === threeBelow && pivot === fourBelow) {\n                            checkAndDeleteNexusClusters([row + 2, col], 1);\n                            for (let i = 0; i < 5; i++) {\n                                _grid[row + i][col] = instance;\n                            } cursor.score += 700;\n                            audio.playSoundEffect();\n                        }\n                    }\n                    if (row < 9) {\n                        oneBelow = _grid[row + 1][col].value;\n                        twoBelow = _grid[row + 2][col].value;\n                        threeBelow = _grid[row + 3][col].value;\n                        if (pivot === oneBelow && pivot === twoBelow && pivot === threeBelow) {\n                            checkAndDeleteNexusClusters([row + 1, col], 2);\n                            for (let i = 0; i < 4; i++) {\n                                _grid[row + i][col] = instance;\n                            } cursor.score += 300;\n                            audio.playSoundEffect();\n                        }\n                    }\n                    if (row < 10) {\n                        oneBelow = _grid[row + 1][col].value;\n                        twoBelow = _grid[row + 2][col].value;\n                        \n                        if (pivot === oneBelow && pivot === twoBelow) {\n                            \n                            checkAndDeleteNexusClusters([row, col], 3);\n                            for (let i = 0; i < 3; i++) {\n                                _grid[row + i][col] = instance;\n                                \n                            } cursor.score += 100;\n                            audio.playSoundEffect();\n                        }\n                    }\n                    if (col < 2) {\n                        oneRight = _grid[row][col + 1].value;\n                        twoRight = _grid[row][col + 2].value;\n                        threeRight = _grid[row][col + 3].value;\n                        fourRight = _grid[row][col + 4].value;\n                        if (pivot === oneRight && pivot === twoRight && pivot === threeRight && pivot === fourRight && _grid[row + 1][col + 1].value && _grid[row + 1][col + 2].value && _grid[row + 1][col + 3].value && _grid[row + 1][col + 4].value) {\n                            for (let i = 0; i < 5; i++) {\n                                _grid[row][col + i] = instance;\n                            } cursor.score += 700;\n                            audio.playSoundEffect();\n                        }} if (col < 3) {\n                        oneRight = _grid[row][col + 1].value;\n                        twoRight = _grid[row][col + 2].value;\n                        threeRight = _grid[row][col + 3].value;\n                        if (pivot === oneRight && pivot === twoRight && pivot === threeRight && _grid[row + 1][col + 1].value && _grid[row + 1][col + 2].value && _grid[row + 1][col + 3].value) {\n                            for (let i = 0; i < 4; i++) {\n                                _grid[row][col + i] = instance;\n                            } cursor.score += 300;\n                            audio.playSoundEffect();\n                        }\n                        } if (col < 4) {\n                        oneRight = _grid[row][col + 1].value;\n                        twoRight = _grid[row][col + 2].value;\n                        if (pivot === oneRight && pivot === twoRight && _grid[row + 1][col + 1].value && _grid[row + 1][col + 2].value) {\n                            checkAndDeleteNexusClustersLeftAndDown([row, col + 2]);\n                            for (let i = 0; i < 3; i++) {\n                                _grid[row][col + i] = instance;\n                            } cursor.score += 100;\n                            audio.playSoundEffect();\n                        }\n                    }\n                }\n        }\n    }\n    return _grid;\n}\n\n\n// FIX THIS\n\nfunction checkAndDeleteNexusClustersLeftAndDown(position) {\n    let y = position[0];\n    let x = position[1];\n    if (y < 10 && grid[y][x].value === grid[y + 1][x].value && grid[y + 2][x].value) {\n        board[y + 1][x] = instance;\n        board[y + 2][x] = instance;\n        cursor.score += 200;\n    }\n}\n\nfunction checkAndDeleteNexusClusters(position, increment) {\n    let oneLeft;\n    let twoLeft;\n    let oneRight;\n    let twoRight;\n    for (let i = 0; i < increment; i++) {\n        let y = position[0] + i;\n        let x = position[1];\n        let pivot = board[y][x].value;\n        if (x >= 2) {\n            oneLeft = board[y][x - 1].value;\n            twoLeft = board[y][x - 2].value;\n            if (x <= 3) {\n                oneRight = board[y][x + 1].value;\n                twoRight = board[y][x + 2].value;\n                if (pivot === oneLeft && pivot === twoLeft && pivot === oneRight && pivot === twoRight) {\n                    board[y][x - 1] = instance;\n                    board[y][x - 2] = instance;\n                    board[y][x + 1] = instance;\n                    board[y][x + 2] = instance;\n                    cursor.score += 700;\n                }\n            } if (x <= 4) {\n                oneRight = board[y][x + 1].value;\n                if (pivot === oneLeft && pivot === twoLeft && pivot === oneRight) {\n                    board[y][x - 1] = instance;\n                    board[y][x - 2] = instance;\n                    board[y][x + 1] = instance;\n                    cursor.score += 500;\n                }\n            } if (pivot === oneLeft && pivot === twoLeft) {\n                board[y][x - 1] = instance;\n                board[y][x - 2] = instance;\n                cursor.score += 200;\n            }\n        } if (x <= 3) {\n            oneRight = board[y][x + 1].value;\n            twoRight = board[y][x + 2].value;\n            if (x >= 1) {\n                oneLeft = board[y][x - 1].value;\n                if (pivot === oneRight && pivot === twoRight && pivot === oneLeft) {\n                    board[y][x + 1] = instance;\n                    board[y][x + 1] = instance;\n                    board[y][x + 2] = instance;\n                    cursor.score += 500;\n                }\n            } if (pivot === oneRight && pivot === twoRight) {\n                board[y][x + 1] = instance;\n                board[y][x + 2] = instance;\n                cursor.score += 200;\n            }\n        } if (x >= 1 && x <= 4 && increment === 3) {\n            oneRight = board[y][x + 1].value;\n            oneLeft = board[y][x - 1].value;\n            if (pivot === oneRight && pivot === oneLeft) {\n                board[y][x + 1] = instance;\n                board[y][x - 1] = instance;\n                cursor.score += 200;\n            }\n        }\n    }\n}\n\n\nfunction checkStartingPointHorizontal(row, col) {\n    if (board[row][col].value === board[row][col - 1].value && board[row - 1][col].value !== board[row][col].value) {\n        let col2 = col - 1;\n        return checkStartingPointHorizontal(row, col2);\n    } else {\n        return [row, col];\n    }\n}\n\nfunction checkStartingPointVertical(row, col) {\n    if ((board[row][col].value === board[row - 1][col].value && board[row][col].value === board[row + 1][col].value) || (board[row][col].value === board[row - 1][col].value && board[row][col].value === board[row - 2][col].value))  {\n        let row2 = row - 1;\n        return checkStartingPointVertical(row2, col);\n    } else {\n        return [row, col];\n    }\n}"],"sourceRoot":""}